kind: PersistentVolume
apiVersion: v1
metadata:
  name: redis-pv
  namespace: ruoyi
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    path: /nfs/redis
    server: 139.159.140.xxx
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: redis-pvc
  namespace: ruoyi
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: ruoyi
data:
  redis.conf: |-
    bind 0.0.0.0
    protected-mode no
    appendonly yes
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: ruoyi
type: Opaque
stringData:
  password: dudu0.0@
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: ruoyi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      containers:
        - name: redis
          image: redis:6.2.7
          ports:
            - containerPort: 6379
          args:
            - "--requirepass"
            - "$(REDIS_PASSWORD)"
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: password
            - name: TZ
              value: Asia/Shanghai
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /redis.conf
              subPath: redis.conf
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc
        - name: redis-config
          configMap:
            name: redis-config
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: ruoyi
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
      nodePort: 30379
  type: NodePort

apiVersion: v1
kind: PersistentVolume
metadata:
  name: nginx-pv
  namespace: ruoyi
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  nfs:
    path: /nfs/nginx/html/ruoyi-vue-plus
    server: 43.156.83.246
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-pvc
  namespace: ruoyi
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx-service
  name: nginx-service
  namespace: ruoyi
spec:
  ports:
    - nodePort: 30088
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: nginx-pod
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-deploy
  name: nginx-deploy
  namespace: ruoyi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-pod
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx-pod
      namespace: ruoyi
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      containers:
        - image: nginx:1.22.1
          name: nginx
          ports:
            - containerPort: 80
          resources: { }
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: html-files
              mountPath: "/usr/share/nginx/html/ruoyi-vue-plus"
          env:
            - name: TZ
              value: Asia/Shanghai
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-configmap
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: html-files
          persistentVolumeClaim:
            claimName: nginx-pvc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
  namespace: ruoyi
data:
  nginx.conf: |
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
      worker_connections  1024;
    }

    http {
      include       mime.types;
      default_type  application/octet-stream;
      sendfile        on;
      keepalive_timeout  65;
      # 限制body大小
      client_max_body_size 100m;

      # Gzip 压缩
      gzip  on;
      gzip_min_length  1k;
      gzip_buffers     4 16k;
      gzip_http_version 1.1;
      gzip_comp_level 9;
      gzip_types       text/plain application/x-javascript text/css application/xml text/javascript application/javascript application/json;
      gzip_disable "MSIE [1-6]\.";
      gzip_vary on;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;

      upstream server {
        ip_hash;
        server ruoyi-service:8080;
      }

      server {
        listen       80;
        server_name  localhost;

        #https配置参考 start
        # listen       444 ssl;

        # 证书直接存放 /docker/nginx/cert/ 目录下即可 更改证书名称即可 无需更改证书路径
        # ssl on;
        # ssl_certificate      /etc/nginx/cert/origin.pem; # /etc/nginx/cert/ 为docker映射路径 不允许更改
        # ssl_certificate_key  /etc/nginx/cert/originPrivate.pem; # /etc/nginx/cert/ 为docker映射路径 不允许更改
        # ssl_session_timeout 5m;
        # ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        # ssl_prefer_server_ciphers on;
        # https配置参考 end

        # 演示环境配置 拦截除 GET POST 之外的所有请求
        # if ($request_method !~* GET|POST) {
        #     rewrite  ^/(.*)$  /403;
        # }

        # location = /403 {
        #     default_type application/json;
        #     return 200 '{"msg":"演示模式，不允许操作","code":500}';
        # }

        # 限制外网访问内网 actuator 相关路径
        location ~ ^(/[^/]*)?/actuator(/.*)?$ {
          return 403;
        }

        location / {
          root   /usr/share/nginx/html/ruoyi-vue-plus;
          try_files $uri $uri/ /index.html;
          index  index.html index.htm;
        }

        location /prod-api/ {
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header REMOTE-HOST $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_pass http://server/;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
          root   html;
        }
      }
    }
